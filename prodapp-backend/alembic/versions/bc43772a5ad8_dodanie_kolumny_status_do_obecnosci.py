"""Dodanie kolumny status do obecnosci

Revision ID: bc43772a5ad8
Revises: fc565375f987
Create Date: 2025-08-28 21:43:17.022982

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'bc43772a5ad8'
down_revision: Union[str, Sequence[str], None] = 'fc565375f987'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('zgloszenia_awarii')
    op.alter_column('ewidencja_czasu', 'id_rekordu',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('ewidencja_czasu', 'id_pracownika',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('ewidencja_czasu', 'id_zlecenia',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('ewidencja_czasu', 'czas_start',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=True)
    op.create_index(op.f('ix_ewidencja_czasu_id_rekordu'), 'ewidencja_czasu', ['id_rekordu'], unique=False)
    op.drop_column('ewidencja_czasu', 'updated_at')
    op.alter_column('meldunki_produkcji', 'id_meldunku',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True)
    op.alter_column('meldunki_produkcji', 'id_zlecenia',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('meldunki_produkcji', 'id_pracownika',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=True)
    op.alter_column('meldunki_produkcji', 'czas_start',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.alter_column('meldunki_produkcji', 'czas_stop',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index(op.f('ix_meldunki_produkcji_id_meldunku'), 'meldunki_produkcji', ['id_meldunku'], unique=False)
    op.drop_column('meldunki_produkcji', 'updated_at')
    op.drop_column('meldunki_produkcji', 'created_at')
    op.drop_column('meldunki_produkcji', 'czas_pracy_min')
    op.drop_column('meldunki_produkcji', 'data_meldunku')
    op.alter_column('obecnosci', 'czas_start',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               nullable=True)
    op.alter_column('obecnosci', 'czas_stop',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
    op.create_index(op.f('ix_obecnosci_id_obecnosci'), 'obecnosci', ['id_obecnosci'], unique=False)
    op.alter_column('pracownicy', 'id_pracownika',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('pracownicy_id_pracownika_seq'::regclass)"))
    op.create_index(op.f('ix_pracownicy_id_pracownika'), 'pracownicy', ['id_pracownika'], unique=False)
    op.drop_column('pracownicy', 'stanowisko')
    op.drop_column('pracownicy', 'updated_at')
    op.alter_column('zlecenia', 'id_zlecenia',
               existing_type=sa.BIGINT(),
               type_=sa.Integer(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('zlecenia_id_zlecenia_seq'::regclass)"))
    op.alter_column('zlecenia', 'nr_zlecenia',
               existing_type=sa.VARCHAR(length=120),
               type_=sa.String(length=50),
               existing_nullable=False)
    op.alter_column('zlecenia', 'deadline',
               existing_type=sa.DATE(),
               type_=sa.DateTime(),
               existing_nullable=False)
    op.alter_column('zlecenia', 'kontrakt',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('zlecenia', 'zl_klienta',
               existing_type=sa.VARCHAR(),
               nullable=True)
    op.alter_column('zlecenia', 'liczba_elementow',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('zlecenia', 'waga_szt',
               existing_type=sa.DOUBLE_PRECISION(precision=53),
               type_=sa.Integer(),
               nullable=True)
    op.create_index(op.f('ix_zlecenia_id_zlecenia'), 'zlecenia', ['id_zlecenia'], unique=False)
    op.drop_column('zlecenia', 'data_start')
    op.drop_column('zlecenia', 'data_koniec')
    op.drop_column('zlecenia', 'ilosc_docelowa')
    op.drop_column('zlecenia', 'created_at')
    op.drop_column('zlecenia', 'status')
    op.drop_column('zlecenia', 'updated_at')
    op.add_column('obecnosci', sa.Column('status', sa.Enum('PRACA_NORMALNA', 'SZATNIA', 'PALARNIA', 'WYJSCIE_SLUZBOWE', 'WYJSCIE_PRYWATNE', name='statusobecnoscienum'), nullable=True))
    # Ustaw wartość domyślną dla istniejących rekordów
    op.execute("UPDATE obecnosci SET status='PRACA_NORMALNA' WHERE status IS NULL")
    # Zmień kolumnę na NOT NULL
    op.alter_column('obecnosci', 'status', nullable=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('zlecenia', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('zlecenia', sa.Column('status', postgresql.ENUM('nowe', 'w_toku', 'wstrzymane', 'zakoĹ„czone', name='status_zlecenia'), server_default=sa.text("'nowe'::status_zlecenia"), autoincrement=False, nullable=True))
    op.add_column('zlecenia', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('zlecenia', sa.Column('ilosc_docelowa', sa.INTEGER(), autoincrement=False, nullable=True))
    op.add_column('zlecenia', sa.Column('data_koniec', sa.DATE(), autoincrement=False, nullable=True))
    op.add_column('zlecenia', sa.Column('data_start', sa.DATE(), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_zlecenia_id_zlecenia'), table_name='zlecenia')
    op.alter_column('zlecenia', 'waga_szt',
               existing_type=sa.Integer(),
               type_=sa.DOUBLE_PRECISION(precision=53),
               nullable=False)
    op.alter_column('zlecenia', 'liczba_elementow',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('zlecenia', 'zl_klienta',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('zlecenia', 'kontrakt',
               existing_type=sa.VARCHAR(),
               nullable=False)
    op.alter_column('zlecenia', 'deadline',
               existing_type=sa.DateTime(),
               type_=sa.DATE(),
               existing_nullable=False)
    op.alter_column('zlecenia', 'nr_zlecenia',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=120),
               existing_nullable=False)
    op.alter_column('zlecenia', 'id_zlecenia',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('zlecenia_id_zlecenia_seq'::regclass)"))
    op.add_column('pracownicy', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('pracownicy', sa.Column('stanowisko', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_pracownicy_id_pracownika'), table_name='pracownicy')
    op.alter_column('pracownicy', 'id_pracownika',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True,
               existing_server_default=sa.text("nextval('pracownicy_id_pracownika_seq'::regclass)"))
    op.drop_index(op.f('ix_obecnosci_id_obecnosci'), table_name='obecnosci')
    op.alter_column('obecnosci', 'czas_stop',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('obecnosci', 'czas_start',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               nullable=False)
    op.drop_column('obecnosci', 'status')
    op.add_column('meldunki_produkcji', sa.Column('data_meldunku', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('meldunki_produkcji', sa.Column('czas_pracy_min', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=True))
    op.add_column('meldunki_produkcji', sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.add_column('meldunki_produkcji', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_meldunki_produkcji_id_meldunku'), table_name='meldunki_produkcji')
    op.alter_column('meldunki_produkcji', 'czas_stop',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('meldunki_produkcji', 'czas_start',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
    op.alter_column('meldunki_produkcji', 'id_pracownika',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('meldunki_produkcji', 'id_zlecenia',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('meldunki_produkcji', 'id_meldunku',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.add_column('ewidencja_czasu', sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True))
    op.drop_index(op.f('ix_ewidencja_czasu_id_rekordu'), table_name='ewidencja_czasu')
    op.alter_column('ewidencja_czasu', 'czas_start',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               nullable=False)
    op.alter_column('ewidencja_czasu', 'id_zlecenia',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('ewidencja_czasu', 'id_pracownika',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=True)
    op.alter_column('ewidencja_czasu', 'id_rekordu',
               existing_type=sa.Integer(),
               type_=sa.BIGINT(),
               existing_nullable=False,
               autoincrement=True)
    op.create_table('zgloszenia_awarii',
    sa.Column('id_awarii', sa.BIGINT(), autoincrement=True, nullable=False),
    sa.Column('id_pracownika', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('id_zlecenia', sa.BIGINT(), autoincrement=False, nullable=True),
    sa.Column('opis', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('zdjecie_url', sa.VARCHAR(length=500), autoincrement=False, nullable=True),
    sa.Column('status', postgresql.ENUM('otwarte', 'w_trakcie', 'zamkniÄ™te', name='status_awarii'), server_default=sa.text("'otwarte'::status_awarii"), autoincrement=False, nullable=True),
    sa.Column('data_zgloszenia', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=True),
    sa.ForeignKeyConstraint(['id_pracownika'], ['pracownicy.id_pracownika'], name=op.f('zgloszenia_awarii_id_pracownika_fkey')),
    sa.ForeignKeyConstraint(['id_zlecenia'], ['zlecenia.id_zlecenia'], name=op.f('zgloszenia_awarii_id_zlecenia_fkey')),
    sa.PrimaryKeyConstraint('id_awarii', name=op.f('zgloszenia_awarii_pkey'))
    )
    # ### end Alembic commands ###
